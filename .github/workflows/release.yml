name: Release
on:
    workflow_dispatch:
env:
    PLUGIN_NAME: obsidian-interval-timer
jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  token: ${{ secrets.PAT }}
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "16.x"
            - name: Update draft
              id: release-drafter-prepare
              uses: release-drafter/release-drafter@v6
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Update version
              run: |
                  node ./bin/version-bump.mjs ${{ steps.release-drafter-prepare.outputs.tag_name }}
            - uses: stefanzweifel/git-auto-commit-action@v5
              with:
                  commit_message: "Update version to ${{ steps.release-drafter-prepare.outputs.tag_name }}"
            - name: Publish release
              id: release-drafter-publish
              uses: release-drafter/release-drafter@v6
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  publish: true
            - name: Build
              id: build
              run: |
                  yarn
                  yarn run build --if-present
                  mkdir ${{ env.PLUGIN_NAME }}
                  cp main.js manifest.json ${{ env.PLUGIN_NAME }}
                  zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
                  ls
                  echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
            - name: Upload zip file
              id: upload-zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.release-drafter-publish.outputs.upload_url }}
                  asset_path: ./${{ env.PLUGIN_NAME }}.zip
                  asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
                  asset_content_type: application/zip
            - name: Upload main.js
              id: upload-main
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.release-drafter-publish.outputs.upload_url }}
                  asset_path: ./main.js
                  asset_name: main.js
                  asset_content_type: text/javascript
            - name: Upload manifest.json
              id: upload-manifest
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.release-drafter-publish.outputs.upload_url }}
                  asset_path: ./manifest.json
                  asset_name: manifest.json
                  asset_content_type: application/json
